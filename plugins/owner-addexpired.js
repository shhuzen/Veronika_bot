
let handler = async (m, { conn, args, usedPrefix, command }) => {
    if (!args[0] || isNaN(args[0])) return m.reply(`üö© –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π.\n\n*–ø—Ä–∏–º–µ—Ä:*\n*${usedPrefix + command}* 30`)

    let who
    if (m.isGroup) who = args[1] ? args[1] : m.chat
    else who = args[1]

    var nDays = 86400000 * args[0]
    var now = new Date() * 1
    if (now < global.db.data.chats[who].expired) global.db.data.chats[who].expired += nDays
    else global.db.data.chats[who].expired = now + nDays
    let teks = `üö© –ë—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–Ω–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è \n*${await conn.getName(who)}* \n\n*–ù–∞:* ${args[0]} –î–µ–Ω—å\n\n*–û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç :* ${msToDate(global.db.data.chats[who].expired - now)}`
    m.reply(teks)
}
handler.help = ['expired *<d√≠as>*']
handler.tags = ['owner']
handler.command = /^(–∞—Ä–µ–Ω–¥–∞|addexpired)$/i
handler.rowner = true
export default handler

function msToDate(ms) {
  let d = isNaN(ms) ? '--' : Math.floor(ms / 86400000)
  let h = isNaN(ms) ? '--' : Math.floor(ms / 3600000) % 24
  let m = isNaN(ms) ? '--' : Math.floor(ms / 60000) % 60
  let s = isNaN(ms) ? '--' : Math.floor(ms / 1000) % 60
  return [d, ' *–î–µ–Ω—å*\n ', h, ' *–ß–∞—Å—ã*\n ', m, ' *–ú–∏–Ω—É—Ç—ã*\n ', s, ' *–°–µ–∫—É–Ω–¥* '].map(v => v.toString().padStart(2, 0)).join('')
}