const handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command, usedPrefix }) => {
  if (usedPrefix == 'a' || usedPrefix == 'A') return;

  const customEmoji = global.db.data.chats[m.chat]?.customEmoji || 'ü§ç';
  m.react(customEmoji);

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }

  const pesan = args.join` `;
  const oi = `*¬ª –ò–ù–§–û–†–ú–ê–¶–ò–Ø :* ${pesan}`;
  let teks = `*!  –û–ë–©–ï–ï –£–ü–û–ú–ò–ù–ê–ù–ò–ï  !*\n  *PARA ${participants.length} –£–ß–ê–°–ù–ò–ö–ò* üó£Ô∏è\n\n ${oi}\n\n‚ï≠  ‚îÑ ùÖÑ  €™Íí∞ \`–¢–ï–ú–ù–û–ï –Ø–î–†–û - –ö–û–ú–ê–ù–î–ê\` Íí±  €ü  ùÖÑ ‚îÑ\n`;
  for (const mem of participants) {
    teks += `‚îä${customEmoji} @${mem.id.split('@')[0]}\n`;
  }
  teks += `‚ï∞‚∏º ‚îÑ ‚îÑ ‚îÑ ‚îÄ  Íí∞  ◊Ö‡≠≠ *${vs}* ‡≠ß ◊Ö Íí±  ‚îÑ  ‚îÄ ‚îÑ ‚∏º`;

  conn.sendMessage(m.chat, { text: teks, mentions: participants.map((a) => a.id) });
};

handler.help = ['todos <mensaje>'];
handler.tags = ['group'];
handler.command = /^(–≤–Ω–∏–º–∞–Ω–∏–µ|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;
