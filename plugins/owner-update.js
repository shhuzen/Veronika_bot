import { execSync } from 'child_process'

var handler = async (m, { conn, text }) => {

m.react('üöÄ') 
try {

const stdout = execSync('git pull' + (m.fromMe && text ? ' ' + text : ''));
let messager = stdout.toString()

if (messager.includes('‚òòÔ∏è Ya estoy actualizada.')) messager = '‚òòÔ∏è –Ø —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.'

if (messager.includes('üí´ Actualizando.')) messager = '‚ú®Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –ø–æ–∫–∞ —è –æ–±–Ω–æ–≤–ª—é—Å—å.\n\n' + stdout.toString()
conn.reply(m.chat, messager, m, rcanal)

} catch { 
try {

const status = execSync('git status --porcelain')

if (status.length > 0) {
const conflictedFiles = status.toString().split('\n').filter(line => line.trim() !== '').map(line => {
if (line.includes('.npm/') || line.includes('.cache/') || line.includes('tmp/') || line.includes('LynxSession/') || line.includes('npm-debug.log')) {
return null
}
return '*‚Üí ' + line.slice(3) + '*'}).filter(Boolean)
if (conflictedFiles.length > 0) {
const errorMessage = `üí≠ –ë—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è, –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é.\n\n‚ú∞ *ARCHIVOS EN CONFLICTO*\n\n${conflictedFiles.join('\n')}`
await conn.reply(m.chat, errorMessage, m, rcanal,)
}
}
} catch (error) {
console.error(error)
let errorMessage2 = '‚ö†Ô∏è Ocurri√≥ un error inesperado.'
if (error.message) {
errorMessage2 += '\n‚ö†Ô∏è Mensaje de error: ' + error.message;
}
await conn.reply(m.chat, errorMessage2, m, rcanal,)
}
}

}

handler.help = ['update', 'actualizar']
handler.tags = ['owner']
handler.command = ['–æ–±–Ω–æ–≤–∏—Ç—å', '–æ–±']
handler.rowner = true

export default handler
